---
title: Devops Metrics - Velocityconf 2011
created_at: 2011-09-06 09:25:04.148241 +02:00
tags:
- metrics
- velocityconf
- devops
blog_post: true
---
Whenever you hear a new theory or idea (like devops), people ask for proof before they engage. This is only natural I guess. This was the reason why I wanted to explore ways to measure devops success. Or rephrased: "Measuring the devops gap" .  The result of my findings were presented at VelocityConf in June.  While I initially planned to present with [Israel Gat](http://theagileexecutive.com/) due to circumstances he switched at the last responsible moment with [Andrew Shafer](http://stochasticresonance.wordpress.com/).

In the talk we used the metaphor of monitoring to explore the metrics. This probably put a lot of people on the wrong track, expecting a lot of real/ganglia metrics. The main point is that the higher level your monitoring the more interesting: measure the end-user perspective in both technical and human monitoring gives you the most value. Monitoring a server is like monitoring an individual person: good to know ,but it doesn't tell you anything on the end-result. I know this is meta-stuff , so you need your head clear to understand.

One of the nicest findings during the research was that whenever people say collaboration(in general) will improve things, there is a high demand for proof. The phrase ["Collaboration is like a black hole, you can only measure it effects by looking at it's effects"](http://www.collaborate.com/blog/2010/01/28/musing-metrics-collaboration).

Also it makes no sense to increase the number of interactions between different groups (dev, ops, qa, mgt) for the sake of increasing it: ["More interaction doesn't mean a better party"](http://www.nature.com/news/2010/101013/full/news.2010.538.html) . You should work on the quality of the interactions.

A third take-away I got from the research what that in the Design world, they too are exploring ideas outside the usual <i>user-centered design</i> and are going the way of <i>[Participatory design](http://www.tandfonline.com/doi/abs/10.1080/15710880701875068)</i>. This fits directly to the devops idea, you automate and do all the stuff you need to, to free up more time in design. And there you can collaborate with your collegues, your peers from other groups and even with your end-users to test out new ideas. In the past design used to be a collective and shared ability. Only in the recent years this craft has become an [individual thing](http://www.amazon.com/Research-Design-Thinking-Nigel-Cross/dp/9062757960).

Enjoy the presentation